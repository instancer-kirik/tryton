# Railway Configuration for Tryton ERP Fork
# Optimized for DivvyQueue integration

[build]
builder = "nixpacks"
buildCommand = """
    echo "Installing Tryton dependencies..." && \
    pip install --upgrade pip setuptools wheel && \
    pip install -e trytond -e proteus && \
    pip install psycopg2-binary gunicorn redis python-dotenv bcrypt && \
    pip install trytond-party trytond-product trytond-sale trytond-purchase && \
    pip install trytond-account trytond-stock trytond-project trytond-company && \
    pip install trytond-currency trytond-country && \
    echo "Tryton installation complete"
"""

[deploy]
startCommand = "/app/start_server.sh"
healthcheckPath = "/health"
healthcheckTimeout = 60
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 3

# Environment variables
[environments.production]
# Database configuration
TRYTOND_DATABASE_URI = "${{DATABASE_URL}}"
DATABASE_NAME = "divvyqueue_prod"

# Server configuration
PORT = "8000"
RAILWAY_STATIC_URL = "${{RAILWAY_STATIC_URL}}"
RAILWAY_PUBLIC_DOMAIN = "${{RAILWAY_PUBLIC_DOMAIN}}"

# Tryton specific
TRYTON_CONFIG = "/app/railway-trytond.conf"
TRYTON_ADMIN_EMAIL = "${{ADMIN_EMAIL}}"
TRYTON_ADMIN_PASSWORD = "${{ADMIN_PASSWORD}}"
TRYTON_SECRET_KEY = "${{SECRET_KEY}}"

# DivvyQueue integration
CORS_ORIGINS = "${{FRONTEND_URL}},https://*.railway.app"
FRONTEND_URL = "${{FRONTEND_URL}}"

# Security
SESSION_TIMEOUT = "3600"
MAX_REQUEST_SIZE = "50M"

# Performance
WORKERS = "2"

# Logging
LOG_LEVEL = "INFO"
PYTHONUNBUFFERED = "1"
PYTHONDONTWRITEBYTECODE = "1"

# Cache (if Redis is available)
REDIS_URL = "${{REDIS_URL}}"
CACHE_TIMEOUT = "300"

# File uploads
UPLOAD_PATH = "/tmp/uploads"
MAX_UPLOAD_SIZE = "10M"

# Email (optional)
EMAIL_HOST = "${{EMAIL_HOST}}"
EMAIL_PORT = "${{EMAIL_PORT}}"
EMAIL_USER = "${{EMAIL_USER}}"
EMAIL_PASSWORD = "${{EMAIL_PASSWORD}}"
EMAIL_USE_TLS = "true"

# Development overrides
[environments.development]
LOG_LEVEL = "DEBUG"
WORKER_PROCESSES = "2"

# Nixpacks configuration
[phases.setup]
nixPkgs = ["python311", "postgresql", "git"]

[phases.install]
cmds = [
    "pip install --upgrade pip setuptools wheel",
    "pip install -e trytond -e proteus",
    "pip install psycopg2-binary gunicorn redis python-dotenv",
    "pip install trytond-party trytond-product trytond-sale trytond-purchase",
    "pip install trytond-account trytond-stock trytond-project trytond-company",
    "pip install trytond-currency trytond-country"
]

[phases.build]
cmds = [
    "mkdir -p /tmp/uploads /tmp/logs",
    "chmod 755 /tmp/uploads /tmp/logs"
]

# Service configuration
[services.web]
startCommand = "gunicorn -w $WORKER_PROCESSES -b 0.0.0.0:$PORT --timeout 120 trytond.wsgi:application"
healthcheck = "/health"

# Cron jobs for maintenance
[[cron]]
name = "cleanup-sessions"
schedule = "0 */6 * * *" # Every 6 hours
command = "python -c \"from trytond.pool import Pool; Pool.clean()\""

[[cron]]
name = "vacuum-database"
schedule = "0 2 * * 0" # Weekly on Sunday at 2 AM
command = "python -c \"from trytond.transaction import Transaction; Transaction.vacuum()\""

# Variables schema for Railway dashboard
[variables]
DATABASE_URL = { description = "PostgreSQL connection string", required = true }
ADMIN_EMAIL = { description = "Administrator email address", required = true }
ADMIN_PASSWORD = { description = "Administrator password", required = true, secret = true }
SECRET_KEY = { description = "Django secret key for sessions", required = true, secret = true }
FRONTEND_URL = { description = "DivvyQueue frontend URL", default = "https://divvyqueue.app" }
EMAIL_HOST = { description = "SMTP host for email", required = false }
EMAIL_PORT = { description = "SMTP port", default = "587" }
EMAIL_USER = { description = "SMTP username", required = false }
EMAIL_PASSWORD = { description = "SMTP password", required = false, secret = true }
REDIS_URL = { description = "Redis connection string for caching", required = false }
